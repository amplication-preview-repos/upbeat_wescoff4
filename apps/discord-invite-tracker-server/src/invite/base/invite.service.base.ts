/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Invite as PrismaInvite } from "@prisma/client";

export class InviteServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.InviteCountArgs, "select">): Promise<number> {
    return this.prisma.invite.count(args);
  }

  async invites(args: Prisma.InviteFindManyArgs): Promise<PrismaInvite[]> {
    return this.prisma.invite.findMany(args);
  }
  async invite(
    args: Prisma.InviteFindUniqueArgs
  ): Promise<PrismaInvite | null> {
    return this.prisma.invite.findUnique(args);
  }
  async createInvite(args: Prisma.InviteCreateArgs): Promise<PrismaInvite> {
    return this.prisma.invite.create(args);
  }
  async updateInvite(args: Prisma.InviteUpdateArgs): Promise<PrismaInvite> {
    return this.prisma.invite.update(args);
  }
  async deleteInvite(args: Prisma.InviteDeleteArgs): Promise<PrismaInvite> {
    return this.prisma.invite.delete(args);
  }
}
