/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";

import {
  Prisma,
  DiscordUser as PrismaDiscordUser,
  Subscription as PrismaSubscription,
  Role as PrismaRole,
} from "@prisma/client";

export class DiscordUserServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.DiscordUserCountArgs, "select">
  ): Promise<number> {
    return this.prisma.discordUser.count(args);
  }

  async discordUsers(
    args: Prisma.DiscordUserFindManyArgs
  ): Promise<PrismaDiscordUser[]> {
    return this.prisma.discordUser.findMany(args);
  }
  async discordUser(
    args: Prisma.DiscordUserFindUniqueArgs
  ): Promise<PrismaDiscordUser | null> {
    return this.prisma.discordUser.findUnique(args);
  }
  async createDiscordUser(
    args: Prisma.DiscordUserCreateArgs
  ): Promise<PrismaDiscordUser> {
    return this.prisma.discordUser.create(args);
  }
  async updateDiscordUser(
    args: Prisma.DiscordUserUpdateArgs
  ): Promise<PrismaDiscordUser> {
    return this.prisma.discordUser.update(args);
  }
  async deleteDiscordUser(
    args: Prisma.DiscordUserDeleteArgs
  ): Promise<PrismaDiscordUser> {
    return this.prisma.discordUser.delete(args);
  }

  async findSubscriptions(
    parentId: string,
    args: Prisma.SubscriptionFindManyArgs
  ): Promise<PrismaSubscription[]> {
    return this.prisma.discordUser
      .findUniqueOrThrow({
        where: { id: parentId },
      })
      .subscriptions(args);
  }

  async getRole(parentId: string): Promise<PrismaRole | null> {
    return this.prisma.discordUser
      .findUnique({
        where: { id: parentId },
      })
      .role();
  }
}
